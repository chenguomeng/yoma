<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.yoma.core.dao.BaseDictDao">

    <sql id="baseDictColumns">
		a.id AS "id",
		a.name AS "name",
		a.description AS "description",
		a.create_by AS "createBy",
		a.update_by AS "updateBy",
		a.create_time AS "createTime",
		a.update_time AS "updateTime"
	</sql>

    <sql id="baseDictJoins">
    </sql>

    <select id="get" resultType="BaseDict">
        SELECT
        <include refid="baseDictColumns"/>
        FROM base_dict a
        <include refid="baseDictJoins"/>
        WHERE a.id = #{id}
    </select>

    <select id="findList" resultType="BaseDict">
        SELECT
        <include refid="baseDictColumns"/>
        FROM base_dict a
        <include refid="baseDictJoins"/>
        <where>

            <if test="name != null    and name != ''  ">
                AND a.name LIKE
                <if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
                <if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
                <if test="dbName == 'mysql'">concat('%',#{name},'%')</if>
            </if>
            <if test="createBy != null     ">
                AND a.create_by = #{createBy}
            </if>
            <if test="updateBy != null     ">
                AND a.update_by = #{updateBy}
            </if>
            <if test="beginCreateTime != null and endCreateTime != null ">
                AND a.create_time BETWEEN #{beginCreateTime} AND #{endCreateTime}
            </if>
            <if test="beginUpdateTime != null and endUpdateTime != null ">
                AND a.update_time BETWEEN #{beginUpdateTime} AND #{endUpdateTime}
            </if>

            <if test="batchIdList != null  and !batchIdList.isEmpty()  ">
                AND
                id IN
                <foreach collection="batchIdList" item="id" index="index"
                         open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
        </where>
        ORDER BY
        <choose>
            <when test="orderBy != null and orderBy != ''">
                ${orderBy} a.id desc
            </when>
            <otherwise>
                a.id desc
            </otherwise>
        </choose>
    </select>


    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO base_dict(
						name,
						description,
						create_by,
						update_by,
						create_time,
						update_time
		) VALUES (
					#{name},
					#{description},
					#{createBy},
					#{updateBy},
					#{createTime},
					#{updateTime}
		)
	</insert>

    <insert id="batchInsert" useGeneratedKeys="true" keyProperty="id" parameterType="java.util.List">
        INSERT INTO base_dict
        (
        name,
        description,
        create_by,
        update_by,
        create_time,
        update_time
        )
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.name},
            #{item.description},
            #{item.createBy},
            #{item.updateBy},
            #{item.createTime},
            #{item.updateTime}
            )
        </foreach>
    </insert>


    <update id="update">
        UPDATE base_dict
        <set>
            <if test="name != null and name != '' ">
                name = #{name},
            </if>
            <if test="description != null and description != '' ">
                description = #{description},
            </if>
            <if test="createBy != null  ">
                create_by = #{createBy},
            </if>
            <if test="updateBy != null  ">
                update_by = #{updateBy},
            </if>
            <if test="createTime != null  ">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null  ">
                update_time = #{updateTime},
            </if>
        </set>
        <where>
            id = #{id}
        </where>
    </update>

    <delete id="delete">
        DELETE FROM base_dict
        <where>id = #{id}</where>
    </delete>


    <delete id="batchDelete">
        DELETE FROM base_dict
        <where>
            id IN
            <foreach collection="batchIdList" item="id" index="index"
                     open="(" close=")" separator=",">
                #{id}
            </foreach>
        </where>
    </delete>


</mapper>
