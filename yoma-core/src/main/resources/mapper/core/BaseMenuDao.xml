<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.yoma.core.dao.BaseMenuDao">

    <sql id="baseMenuJoins">
        <if test="roleId != null  or (roleIds != null  and !roleIds.isEmpty() )">
            LEFT JOIN base_roles_menus rm ON rm.menu_id = a.id
        </if>
    </sql>

    <sql id="baseMenuColumns">
		a.id AS "id",
		a.pid AS "pid",
		a.sub_count AS "subCount",
		a.type AS "type",
		a.title AS "title",
		a.name AS "name",
		a.component AS "component",
		a.menu_sort AS "menuSort",
		a.icon AS "icon",
		a.path AS "path",
		a.i_frame AS "iFrame",
		a.cache AS "cache",
		a.hidden AS "hidden",
		a.permission AS "permission",
		a.create_by AS "createBy",
		a.update_by AS "updateBy",
		a.create_time AS "createTime",
		a.update_time AS "updateTime"
	</sql>

    <select id="get" resultType="BaseMenu">
        SELECT
        <include refid="baseMenuColumns"/>
        FROM base_menu a
        <!--<include refid="baseMenuJoins"/>-->
        WHERE a.id = #{id}
    </select>

    <select id="findList" resultType="BaseMenu">
        SELECT
        <include refid="baseMenuColumns"/>
        FROM base_menu a
        <include refid="baseMenuJoins"/>
        <where>

            <if test="pid != null     ">
                AND a.pid = #{pid}
            </if>
            <if test="pidIsNull != null      ">
                AND a.pid is null
            </if>
            <if test="roleId != null     ">
                AND rm.role_id = #{roleId}
            </if>
            <if test="subCount != null     ">
                AND a.sub_count = #{subCount}
            </if>
            <if test="type != null     ">
                AND a.type = #{type}
            </if>
            <if test="typeNot != null     ">
                AND a.type != #{typeNot}
            </if>
            <if test="title != null    and title != ''  ">
                AND a.title LIKE
                <if test="dbName == 'oracle'">'%'||#{title}||'%'</if>
                <if test="dbName == 'mssql'">'%'+#{title}+'%'</if>
                <if test="dbName == 'mysql'">concat('%',#{title},'%')</if>
            </if>
            <if test="name != null    and name != ''  ">
                AND a.name LIKE
                <if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
                <if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
                <if test="dbName == 'mysql'">concat('%',#{name},'%')</if>
            </if>
            <if test="iFrame != null     ">
                AND a.i_frame = #{iFrame}
            </if>
            <if test="cache != null     ">
                AND a.cache = #{cache}
            </if>
            <if test="hidden != null     ">
                AND a.hidden = #{hidden}
            </if>
            <if test="permission != null    and permission != ''  ">
                AND a.permission = #{permission}
            </if>
           <!-- <if test="createBy != null     ">
                AND a.create_by = #{createBy}
            </if>
            <if test="updateBy != null     ">
                AND a.update_by = #{updateBy}
            </if>-->
            <if test="beginCreateTime != null and endCreateTime != null ">
                AND a.create_time BETWEEN #{beginCreateTime} AND #{endCreateTime}
            </if>
            <if test="beginUpdateTime != null and endUpdateTime != null ">
                AND a.update_time BETWEEN #{beginUpdateTime} AND #{endUpdateTime}
            </if>

            <if test="batchIdList != null  and !batchIdList.isEmpty()  ">
                AND
                id IN
                <foreach collection="batchIdList" item="id" index="index"
                         open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
            <if test="roleIds != null  and !roleIds.isEmpty()  ">
                AND
                rm.role_id IN
                <foreach collection="roleIds" item="id" index="index"
                         open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
        </where>
        ORDER BY
        <choose>
            <when test="orderBy != null and orderBy != ''">
                ${orderBy} a.id desc
            </when>
            <otherwise>
                a.id desc
            </otherwise>
        </choose>
    </select>


    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO base_menu(
						pid,
						sub_count,
						type,
						title,
						name,
						component,
						menu_sort,
						icon,
						path,
						i_frame,
						cache,
						hidden,
						permission,
						create_by,
						update_by,
						create_time,
						update_time
		) VALUES (
					#{pid},
					#{subCount},
					#{type},
					#{title},
					#{name},
					#{component},
					#{menuSort},
					#{icon},
					#{path},
					#{iFrame},
					#{cache},
					#{hidden},
					#{permission},
					#{createBy},
					#{updateBy},
					#{createTime},
					#{updateTime}
		)
	</insert>

    <insert id="batchInsert" useGeneratedKeys="true" keyProperty="id" parameterType="java.util.List">
        INSERT INTO base_menu
        (
        pid,
        sub_count,
        type,
        title,
        name,
        component,
        menu_sort,
        icon,
        path,
        i_frame,
        cache,
        hidden,
        permission,
        create_by,
        update_by,
        create_time,
        update_time
        )
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.pid},
            #{item.subCount},
            #{item.type},
            #{item.title},
            #{item.name},
            #{item.component},
            #{item.menuSort},
            #{item.icon},
            #{item.path},
            #{item.iFrame},
            #{item.cache},
            #{item.hidden},
            #{item.permission},
            #{item.createBy},
            #{item.updateBy},
            #{item.createTime},
            #{item.updateTime}
            )
        </foreach>
    </insert>


    <update id="update">
        UPDATE base_menu
        <set>
            <if test="pid != null  ">
                pid = #{pid},
            </if>
            <if test="subCount != null  ">
                sub_count = #{subCount},
            </if>
            <if test="type != null  ">
                type = #{type},
            </if>
            <if test="title != null and title != '' ">
                title = #{title},
            </if>
            <if test="name != null and name != '' ">
                name = #{name},
            </if>
            <if test="component != null and component != '' ">
                component = #{component},
            </if>
            <if test="menuSort != null  ">
                menu_sort = #{menuSort},
            </if>
            <if test="icon != null and icon != '' ">
                icon = #{icon},
            </if>
            <if test="path != null and path != '' ">
                path = #{path},
            </if>
            <if test="iFrame != null  ">
                i_frame = #{iFrame},
            </if>
            <if test="cache != null  ">
                cache = #{cache},
            </if>
            <if test="hidden != null  ">
                hidden = #{hidden},
            </if>
            <if test="permission != null and permission != '' ">
                permission = #{permission},
            </if>
            <if test="createBy != null  ">
                create_by = #{createBy},
            </if>
            <if test="updateBy != null  ">
                update_by = #{updateBy},
            </if>
            <if test="createTime != null  ">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null  ">
                update_time = #{updateTime},
            </if>
        </set>
        <where>
            id = #{id}
        </where>
    </update>

    <delete id="delete">
        DELETE FROM base_menu
        <where>id = #{id}</where>
    </delete>


    <delete id="batchDelete">
        DELETE FROM base_menu
        <where>
            id IN
            <foreach collection="batchIdList" item="id" index="index"
                     open="(" close=")" separator=",">
                #{id}
            </foreach>
        </where>
    </delete>


</mapper>
