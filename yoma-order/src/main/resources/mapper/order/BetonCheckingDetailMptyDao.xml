<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.yoma.order.dao.BetonCheckingDetailMptyDao">
    
	<sql id="betonCheckingDetailMptyColumns">
		a.id AS "id",
		a.checkingNo AS "checkingNo",
		a.type1 AS "type1",
		a.dataDate AS "dataDate",
		a.dataType AS "dataType",
		a.conStrength AS "conStrength",
		a.cubicNum1 AS "cubicNum1",
		a.cubicNum AS "cubicNum",
		a.unitPrice AS "unitPrice",
		a.unitSellingPrice AS "unitSellingPrice",
		a.unitPriceSum AS "unitPriceSum",
		a.unitSellingPriceSum AS "unitSellingPriceSum",
		a.officialPrice AS "officialPrice",
		a.officialSellingPrice AS "officialSellingPrice",
		a.remark AS "remark",
		a.createTime AS "createTime",
		a.createId AS "createId",
		a.updateTime AS "updateTime"
	</sql>
	
	<sql id="betonCheckingDetailMptyJoins">
	</sql>
    
	<select id="get" resultType="BetonCheckingDetailMpty">
		SELECT 
			<include refid="betonCheckingDetailMptyColumns"/>
		FROM t_beton_checking_detail_mpty a
		<include refid="betonCheckingDetailMptyJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="BetonCheckingDetailMpty">
		SELECT 
			<include refid="betonCheckingDetailMptyColumns"/>
		FROM t_beton_checking_detail_mpty a
		<include refid="betonCheckingDetailMptyJoins"/>
		<where>
			
			<if test="checkingNo != null    and checkingNo != ''  ">
				AND a.checkingNo = #{checkingNo}
			</if>
			<if test="type1 != null     ">
				AND a.type1 = #{type1}
			</if>
			<if test="beginDataDate != null and endDataDate != null ">
				AND a.dataDate BETWEEN #{beginDataDate} AND #{endDataDate}
			</if>
			<if test="dataType != null     ">
				AND a.dataType = #{dataType}
			</if>
			<if test="conStrength != null    and conStrength != ''  ">
				AND a.conStrength = #{conStrength}
			</if>
			<if test="beginCreateTime != null and endCreateTime != null ">
				AND a.createTime BETWEEN #{beginCreateTime} AND #{endCreateTime}
			</if>
			<if test="createId != null     ">
				AND a.createId = #{createId}
			</if>
			<if test="beginUpdateTime != null and endUpdateTime != null ">
				AND a.updateTime BETWEEN #{beginUpdateTime} AND #{endUpdateTime}
			</if>

			<if test="batchIdList != null  and !batchIdList.isEmpty()  ">
				AND
				id IN
				<foreach collection="batchIdList" item="id" index="index"
						 open="(" close=")" separator=",">
					#{id}
				</foreach>
			</if>
		</where>
		ORDER BY
		<choose>
			<when test="orderBy != null and orderBy != ''">
				${orderBy}  a.id desc
			</when>
			<otherwise>
			a.id desc
			</otherwise>
		</choose>
	</select>
	

	<insert id="insert"  useGeneratedKeys="true" keyProperty="id" >
		INSERT INTO t_beton_checking_detail_mpty(
						checkingNo,
						type1,
						dataDate,
						dataType,
						conStrength,
						cubicNum1,
						cubicNum,
						unitPrice,
						unitSellingPrice,
						unitPriceSum,
						unitSellingPriceSum,
						officialPrice,
						officialSellingPrice,
						remark,
						createTime,
						createId,
						updateTime
		) VALUES (
					#{checkingNo},
					#{type1},
					#{dataDate},
					#{dataType},
					#{conStrength},
					#{cubicNum1},
					#{cubicNum},
					#{unitPrice},
					#{unitSellingPrice},
					#{unitPriceSum},
					#{unitSellingPriceSum},
					#{officialPrice},
					#{officialSellingPrice},
					#{remark},
					#{createTime},
					#{createId},
					#{updateTime}
		)
	</insert>
	
<insert id ="batchInsert" useGeneratedKeys="true" keyProperty="id" parameterType="java.util.List" >
           INSERT INTO t_beton_checking_detail_mpty
           (
							checkingNo,
							type1,
							dataDate,
							dataType,
							conStrength,
							cubicNum1,
							cubicNum,
							unitPrice,
							unitSellingPrice,
							unitPriceSum,
							unitSellingPriceSum,
							officialPrice,
							officialSellingPrice,
							remark,
							createTime,
							createId,
							updateTime
           )
           values
            <foreach collection ="list" item="item" index= "index" separator =",">
                (
						#{item.checkingNo},
						#{item.type1},
						#{item.dataDate},
						#{item.dataType},
						#{item.conStrength},
						#{item.cubicNum1},
						#{item.cubicNum},
						#{item.unitPrice},
						#{item.unitSellingPrice},
						#{item.unitPriceSum},
						#{item.unitSellingPriceSum},
						#{item.officialPrice},
						#{item.officialSellingPrice},
						#{item.remark},
						#{item.createTime},
						#{item.createId},
						#{item.updateTime}
                )
            </foreach >
     </insert >
	
	
	
	
	<update id="update">
		UPDATE t_beton_checking_detail_mpty 
			<set> 	
							<if test="checkingNo != null and checkingNo != '' ">
								checkingNo = #{checkingNo},
							</if>
							<if test="type1 != null  ">
								type1 = #{type1},
							</if>
							<if test="dataDate != null  ">
								dataDate = #{dataDate},
							</if>
							<if test="dataType != null  ">
								dataType = #{dataType},
							</if>
							<if test="conStrength != null and conStrength != '' ">
								conStrength = #{conStrength},
							</if>
							<if test="cubicNum1 != null  ">
								cubicNum1 = #{cubicNum1},
							</if>
							<if test="cubicNum != null  ">
								cubicNum = #{cubicNum},
							</if>
							<if test="unitPrice != null  ">
								unitPrice = #{unitPrice},
							</if>
							<if test="unitSellingPrice != null  ">
								unitSellingPrice = #{unitSellingPrice},
							</if>
							<if test="unitPriceSum != null  ">
								unitPriceSum = #{unitPriceSum},
							</if>
							<if test="unitSellingPriceSum != null  ">
								unitSellingPriceSum = #{unitSellingPriceSum},
							</if>
							<if test="officialPrice != null  ">
								officialPrice = #{officialPrice},
							</if>
							<if test="officialSellingPrice != null  ">
								officialSellingPrice = #{officialSellingPrice},
							</if>
							<if test="remark != null and remark != '' ">
								remark = #{remark},
							</if>
							<if test="createTime != null  ">
								createTime = #{createTime},
							</if>
							<if test="createId != null  ">
								createId = #{createId},
							</if>
							<if test="updateTime != null  ">
								updateTime = #{updateTime},
							</if>
			</set>
			<where>
				id = #{id}
			</where>
	</update>
	
	<delete id="delete">
		DELETE FROM t_beton_checking_detail_mpty
		<where>   id = #{id} </where>
	</delete>


	<delete id="batchDelete">
		DELETE FROM t_beton_checking_detail_mpty
		<where>
			id IN
			<foreach collection="batchIdList" item="id" index="index"
					 open="(" close=")" separator=",">
				#{id}
			</foreach>
		</where>
	</delete>


	
</mapper>