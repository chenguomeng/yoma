<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.yoma.order.dao.BetonCheckingSettingDao">

	<sql id="betonCheckingSettingColumns">
		a.id AS "id",
		a.clientId AS "clientId",
		a.betonClientId AS "betonClientId",
		a.projectId AS "projectId",
		a.type1 AS "type1",
		a.createType AS "createType",
		a.createPeriod AS "createPeriod",
		a.compType AS "compType",
		a.minCubicNum AS "minCubicNum",
		a.minCubicNumPrice AS "minCubicNumPrice",
		a.rateType AS "rateType",
		a.rateHnt AS "rateHnt",
		a.rateSj AS "rateSj",
		a.priceMakupType AS "priceMakupType",
		a.templateUrl AS "templateUrl",
		a.createTime AS "createTime",
			p.projectName,
			c.clientName ,
		a.createId AS "createId",
		a.updateTime AS "updateTime"
	</sql>

	<sql id="betonCheckingSettingJoins">
	LEFT JOIN t_beton_project p ON a.projectId = p.id
	LEFT JOIN t_beton_client c ON a.betonClientId = c.id
	</sql>

	<select id="get" resultType="BetonCheckingSetting">
		SELECT
			<include refid="betonCheckingSettingColumns"/>
		FROM t_beton_checking_setting a
		<include refid="betonCheckingSettingJoins"/>
		WHERE a.id = #{id}
	</select>

	<select id="findList" resultType="BetonCheckingSetting">
		SELECT
			<include refid="betonCheckingSettingColumns"/>
		FROM t_beton_checking_setting a
		<include refid="betonCheckingSettingJoins"/>
		<where>

			<if test="clientId != null     ">
				AND a.clientId = #{clientId}
			</if>
			<if test="betonClientId != null     ">
				AND a.betonClientId = #{betonClientId}
			</if>
			<if test="projectId != null     ">
				AND a.projectId = #{projectId}
			</if>
			<if test="type1 != null     ">
				AND a.type1 = #{type1}
			</if>
			<if test="createType != null     ">
				AND a.createType = #{createType}
			</if>
			<if test="createPeriod != null     ">
				AND a.createPeriod = #{createPeriod}
			</if>
			<if test="compType != null     ">
				AND a.compType = #{compType}
			</if>
			<if test="minCubicNum != null     ">
				AND a.minCubicNum = #{minCubicNum}
			</if>
			<if test="minCubicNumPrice != null     ">
				AND a.minCubicNumPrice = #{minCubicNumPrice}
			</if>
			<if test="rateType != null     ">
				AND a.rateType = #{rateType}
			</if>
			<if test="rateHnt != null     ">
				AND a.rateHnt = #{rateHnt}
			</if>
			<if test="rateSj != null     ">
				AND a.rateSj = #{rateSj}
			</if>
			<if test="priceMakupType != null     ">
				AND a.priceMakupType = #{priceMakupType}
			</if>
			<if test="beginCreateTime != null and endCreateTime != null ">
				AND a.createTime BETWEEN #{beginCreateTime} AND #{endCreateTime}
			</if>
			<if test="createId != null     ">
				AND a.createId = #{createId}
			</if>
			<if test="beginUpdateTime != null and endUpdateTime != null ">
				AND a.updateTime BETWEEN #{beginUpdateTime} AND #{endUpdateTime}
			</if>

			<if test="batchIdList != null  and !batchIdList.isEmpty()  ">
				AND
				id IN
				<foreach collection="batchIdList" item="id" index="index"
						 open="(" close=")" separator=",">
					#{id}
				</foreach>
			</if>
		</where>
		ORDER BY
		<choose>
			<when test="orderBy != null and orderBy != ''">
				${orderBy}  a.id desc
			</when>
			<otherwise>
			a.id desc
			</otherwise>
		</choose>
	</select>


	<insert id="insert"  useGeneratedKeys="true" keyProperty="id" >
		INSERT INTO t_beton_checking_setting(
						clientId,
						betonClientId,
						projectId,
						type1,
						createType,
						createPeriod,
						compType,
						minCubicNum,
						minCubicNumPrice,
						rateType,
						rateHnt,
						rateSj,
						priceMakupType,
						templateUrl,
						createTime,
						createId,
						updateTime
		) VALUES (
					#{clientId},
					#{betonClientId},
					#{projectId},
					#{type1},
					#{createType},
					#{createPeriod},
					#{compType},
					#{minCubicNum},
					#{minCubicNumPrice},
					#{rateType},
					#{rateHnt},
					#{rateSj},
					#{priceMakupType},
					#{templateUrl},
					#{createTime},
					#{createId},
					#{updateTime}
		)
	</insert>

<insert id ="batchInsert" useGeneratedKeys="true" keyProperty="id" parameterType="java.util.List" >
           INSERT INTO t_beton_checking_setting
           (
							clientId,
							betonClientId,
							projectId,
							type1,
							createType,
							createPeriod,
							compType,
							minCubicNum,
							minCubicNumPrice,
							rateType,
							rateHnt,
							rateSj,
							priceMakupType,
							templateUrl,
							createTime,
							createId,
							updateTime
           )
           values
            <foreach collection ="list" item="item" index= "index" separator =",">
                (
						#{item.clientId},
						#{item.betonClientId},
						#{item.projectId},
						#{item.type1},
						#{item.createType},
						#{item.createPeriod},
						#{item.compType},
						#{item.minCubicNum},
						#{item.minCubicNumPrice},
						#{item.rateType},
						#{item.rateHnt},
						#{item.rateSj},
						#{item.priceMakupType},
						#{item.templateUrl},
						#{item.createTime},
						#{item.createId},
						#{item.updateTime}
                )
            </foreach >
     </insert >




	<update id="update">
		UPDATE t_beton_checking_setting
			<set>
							<if test="clientId != null  ">
								clientId = #{clientId},
							</if>
							<if test="betonClientId != null  ">
								betonClientId = #{betonClientId},
							</if>
							<if test="projectId != null  ">
								projectId = #{projectId},
							</if>
							<if test="type1 != null  ">
								type1 = #{type1},
							</if>
							<if test="createType != null  ">
								createType = #{createType},
							</if>
							<if test="createPeriod != null  ">
								createPeriod = #{createPeriod},
							</if>
							<if test="compType != null  ">
								compType = #{compType},
							</if>
							<if test="minCubicNum != null  ">
								minCubicNum = #{minCubicNum},
							</if>
							<if test="minCubicNumPrice != null  ">
								minCubicNumPrice = #{minCubicNumPrice},
							</if>
							<if test="rateType != null  ">
								rateType = #{rateType},
							</if>
							<if test="rateHnt != null  ">
								rateHnt = #{rateHnt},
							</if>
							<if test="rateSj != null  ">
								rateSj = #{rateSj},
							</if>
							<if test="priceMakupType != null  ">
								priceMakupType = #{priceMakupType},
							</if>
							<if test="templateUrl != null and templateUrl != '' ">
								templateUrl = #{templateUrl},
							</if>
							<if test="createTime != null  ">
								createTime = #{createTime},
							</if>
							<if test="createId != null  ">
								createId = #{createId},
							</if>
							<if test="updateTime != null  ">
								updateTime = #{updateTime},
							</if>
			</set>
			<where>
				id = #{id}
			</where>
	</update>

	<delete id="delete">
		DELETE FROM t_beton_checking_setting
		<where>   id = #{id} </where>
	</delete>


	<delete id="batchDelete">
		DELETE FROM t_beton_checking_setting
		<where>
			id IN
			<foreach collection="batchIdList" item="id" index="index"
					 open="(" close=")" separator=",">
				#{id}
			</foreach>
		</where>
	</delete>



</mapper>
