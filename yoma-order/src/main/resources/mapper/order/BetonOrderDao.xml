<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.yoma.order.dao.BetonOrderDao">

    <sql id="betonOrderColumns">
		a.id AS "id",
		a.orderNo AS "orderNo",
		a.clientId AS "clientId",
		a.companyName AS "companyName",
		a.orderNoERP AS "orderNoERP",
		a.manufactureTime AS "manufactureTime",
		a.carNo1 AS "carNo1",
		a.carNo2 AS "carNo2",
		a.betonClientId AS "betonClientId",
		a.projectId AS "projectId",
		a.trait AS "trait",
		a.castType AS "castType",
		a.parts AS "parts",
		a.conStrength AS "conStrength",
		a.slump AS "slump",
		a.permeate AS "permeate",
		a.carNum AS "carNum",
		p.projectName,
	    c.clientName betonClientName ,
		a.grossTon1 AS "grossTon1",
		a.tareTon1 AS "tareTon1",
		a.realityTon1 AS "realityTon1",
		a.cubicNum1 AS "cubicNum1",
		a.grossTon2 AS "grossTon2",
		a.tareTon2 AS "tareTon2",
		a.realityTon2 AS "realityTon2",
		a.cubicNum2 AS "cubicNum2",
		a.cubicNum AS "cubicNum",
		a.waybillUrl AS "waybillUrl",
		a.source AS "source",
		a.state AS "state",
		a.overTime AS "overTime",
		a.timeOut AS "timeOut",
		a.inTime AS "inTime",
		a.outTime AS "outTime",
		a.financeType AS "financeType",
		a.financeId AS "financeId",
		a.financeName AS "financeName",
		a.financeTime AS "financeTime",
		a.financeRemark AS "financeRemark",
		a.tallyType AS "tallyType",
		a.tallyTime AS "tallyTime",
		a.createId AS "createId",
		a.createName AS "createName",
		a.createTime AS "createTime",
		a.updateTime AS "updateTime"
	</sql>

    <sql id="betonOrderJoins">
		LEFT JOIN t_beton_project p ON a.projectId = p.id
		LEFT JOIN t_beton_client c ON a.betonClientId = c.id
	</sql>

    <select id="get" resultType="BetonOrder">
        SELECT
        <include refid="betonOrderColumns"/>
        FROM t_beton_order a
        <include refid="betonOrderJoins"/>
        WHERE a.id = #{id}
    </select>

    <select id="findList" resultType="BetonOrder">
        SELECT
        <include refid="betonOrderColumns"/>
        FROM t_beton_order a
        <include refid="betonOrderJoins"/>
        <where>

            <if test="orderNo != null    and orderNo != ''  ">
                AND a.orderNo LIKE
                <if test="dbName == 'oracle'">'%'||#{orderNo}||'%'</if>
                <if test="dbName == 'mssql'">'%'+#{orderNo}+'%'</if>
                <if test="dbName == 'mysql'">concat('%',#{orderNo},'%')</if>
            </if>
            <if test="clientId != null     ">
                AND a.clientId = #{clientId}
            </if>
            <if test="companyName != null    and companyName != ''  ">
                AND a.companyName LIKE
                <if test="dbName == 'oracle'">'%'||#{companyName}||'%'</if>
                <if test="dbName == 'mssql'">'%'+#{companyName}+'%'</if>
                <if test="dbName == 'mysql'">concat('%',#{companyName},'%')</if>
            </if>
            <if test="orderNoERP != null    and orderNoERP != ''  ">
                AND a.orderNoERP LIKE
                <if test="dbName == 'oracle'">'%'||#{orderNoERP}||'%'</if>
                <if test="dbName == 'mssql'">'%'+#{orderNoERP}+'%'</if>
                <if test="dbName == 'mysql'">concat('%',#{orderNoERP},'%')</if>
            </if>
            <if test="beginManufactureTime != null and endManufactureTime != null ">
                AND a.manufactureTime BETWEEN #{beginManufactureTime} AND #{endManufactureTime}
            </if>
            <if test="carNo1 != null    and carNo1 != ''  ">
                AND a.carNo1 LIKE
                <if test="dbName == 'oracle'">'%'||#{carNo1}||'%'</if>
                <if test="dbName == 'mssql'">'%'+#{carNo1}+'%'</if>
                <if test="dbName == 'mysql'">concat('%',#{carNo1},'%')</if>
            </if>
            <if test="carNo2 != null    and carNo2 != ''  ">
                AND a.carNo2 LIKE
                <if test="dbName == 'oracle'">'%'||#{carNo2}||'%'</if>
                <if test="dbName == 'mssql'">'%'+#{carNo2}+'%'</if>
                <if test="dbName == 'mysql'">concat('%',#{carNo2},'%')</if>
            </if>
            <if test="betonClientId != null     ">
                AND a.betonClientId = #{betonClientId}
            </if>
            <if test="projectId != null     ">
                AND a.projectId = #{projectId}
            </if>
            <if test="betonClientName != null    and betonClientName != ''  ">
                AND a.betonClientName LIKE
                <if test="dbName == 'oracle'">'%'||#{betonClientName}||'%'</if>
                <if test="dbName == 'mssql'">'%'+#{betonClientName}+'%'</if>
                <if test="dbName == 'mysql'">concat('%',#{betonClientName},'%')</if>
            </if>
            <if test="projectName != null    and projectName != ''  ">
                AND a.projectName LIKE
                <if test="dbName == 'oracle'">'%'||#{projectName}||'%'</if>
                <if test="dbName == 'mssql'">'%'+#{projectName}+'%'</if>
                <if test="dbName == 'mysql'">concat('%',#{projectName},'%')</if>
            </if>
            <if test="castType != null     ">
                AND a.castType = #{castType}
            </if>
            <if test="parts != null    and parts != ''  ">
                AND a.parts LIKE
                <if test="dbName == 'oracle'">'%'||#{parts}||'%'</if>
                <if test="dbName == 'mssql'">'%'+#{parts}+'%'</if>
                <if test="dbName == 'mysql'">concat('%',#{parts},'%')</if>
            </if>
            <if test="slump != null    and slump != ''  ">
                AND a.slump = #{slump}
            </if>
            <if test="permeate != null    and permeate != ''  ">
                AND a.permeate = #{permeate}
            </if>
            <if test="carNum != null     ">
                AND a.carNum = #{carNum}
            </if>
            <if test="source != null     ">
                AND a.source = #{source}
            </if>
            <if test="state != null     ">
                AND a.state = #{state}
            </if>
            <if test="beginOverTime != null and endOverTime != null ">
                AND a.overTime BETWEEN #{beginOverTime} AND #{endOverTime}
            </if>
            <if test="timeOut != null     ">
                AND a.timeOut = #{timeOut}
            </if>
            <if test="beginInTime != null and endInTime != null ">
                AND a.inTime BETWEEN #{beginInTime} AND #{endInTime}
            </if>
            <if test="beginOutTime != null and endOutTime != null ">
                AND a.outTime BETWEEN #{beginOutTime} AND #{endOutTime}
            </if>
            <if test="financeType != null     ">
                AND a.financeType = #{financeType}
            </if>
            <if test="financeId != null     ">
                AND a.financeId = #{financeId}
            </if>
            <if test="financeName != null    and financeName != ''  ">
                AND a.financeName LIKE
                <if test="dbName == 'oracle'">'%'||#{financeName}||'%'</if>
                <if test="dbName == 'mssql'">'%'+#{financeName}+'%'</if>
                <if test="dbName == 'mysql'">concat('%',#{financeName},'%')</if>
            </if>
            <if test="beginFinanceTime != null and endFinanceTime != null ">
                AND a.financeTime BETWEEN #{beginFinanceTime} AND #{endFinanceTime}
            </if>
            <if test="tallyType != null     ">
                AND a.tallyType = #{tallyType}
            </if>
            <if test="beginTallyTime != null and endTallyTime != null ">
                AND a.tallyTime BETWEEN #{beginTallyTime} AND #{endTallyTime}
            </if>
            <if test="createId != null     ">
                AND a.createId = #{createId}
            </if>
            <if test="createName != null    and createName != ''  ">
                AND a.createName LIKE
                <if test="dbName == 'oracle'">'%'||#{createName}||'%'</if>
                <if test="dbName == 'mssql'">'%'+#{createName}+'%'</if>
                <if test="dbName == 'mysql'">concat('%',#{createName},'%')</if>
            </if>
            <if test="beginCreateTime != null and endCreateTime != null ">
                AND a.createTime BETWEEN #{beginCreateTime} AND #{endCreateTime}
            </if>
            <if test="beginUpdateTime != null and endUpdateTime != null ">
                AND a.updateTime BETWEEN #{beginUpdateTime} AND #{endUpdateTime}
            </if>

            <if test="batchIdList != null  and !batchIdList.isEmpty()  ">
                AND
                id IN
                <foreach collection="batchIdList" item="id" index="index"
                         open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
        </where>
        ORDER BY
        <choose>
            <when test="orderBy != null and orderBy != ''">
                ${orderBy} a.id desc
            </when>
            <otherwise>
                a.id desc
            </otherwise>
        </choose>
    </select>


    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO t_beton_order(
						orderNo,
						clientId,
						companyName,
						orderNoERP,
						manufactureTime,
						carNo1,
						carNo2,
						betonClientId,
						projectId,
						trait,
						betonClientName,
						projectName,
						castType,
						parts,
						conStrength,
						slump,
						permeate,
						carNum,
						grossTon1,
						tareTon1,
						realityTon1,
						cubicNum1,
						grossTon2,
						tareTon2,
						realityTon2,
						cubicNum2,
						cubicNum,
						waybillUrl,
						source,
						state,
						overTime,
						timeOut,
						inTime,
						outTime,
						financeType,
						financeId,
						financeName,
						financeTime,
						financeRemark,
						tallyType,
						tallyTime,
						createId,
						createName,
						createTime,
						updateTime
		) VALUES (
					#{orderNo},
					#{clientId},
					#{companyName},
					#{orderNoERP},
					#{manufactureTime},
					#{carNo1},
					#{carNo2},
					#{betonClientId},
					#{projectId},
					#{trait},
					#{betonClientName},
					#{projectName},
					#{castType},
					#{parts},
					#{conStrength},
					#{slump},
					#{permeate},
					#{carNum},
					#{grossTon1},
					#{tareTon1},
					#{realityTon1},
					#{cubicNum1},
					#{grossTon2},
					#{tareTon2},
					#{realityTon2},
					#{cubicNum2},
					#{cubicNum},
					#{waybillUrl},
					#{source},
					#{state},
					#{overTime},
					#{timeOut},
					#{inTime},
					#{outTime},
					#{financeType},
					#{financeId},
					#{financeName},
					#{financeTime},
					#{financeRemark},
					#{tallyType},
					#{tallyTime},
					#{createId},
					#{createName},
					#{createTime},
					#{updateTime}
		)
	</insert>

    <insert id="batchInsert" useGeneratedKeys="true" keyProperty="id" parameterType="java.util.List">
        INSERT INTO t_beton_order
        (
        orderNo,
        clientId,
        companyName,
        orderNoERP,
        manufactureTime,
        carNo1,
        carNo2,
        betonClientId,
        projectId,
        trait,
        betonClientName,
        projectName,
        castType,
        parts,
        conStrength,
        slump,
        permeate,
        carNum,
        grossTon1,
        tareTon1,
        realityTon1,
        cubicNum1,
        grossTon2,
        tareTon2,
        realityTon2,
        cubicNum2,
        cubicNum,
        waybillUrl,
        source,
        state,
        overTime,
        timeOut,
        inTime,
        outTime,
        financeType,
        financeId,
        financeName,
        financeTime,
        financeRemark,
        tallyType,
        tallyTime,
        createId,
        createName,
        createTime,
        updateTime
        )
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.orderNo},
            #{item.clientId},
            #{item.companyName},
            #{item.orderNoERP},
            #{item.manufactureTime},
            #{item.carNo1},
            #{item.carNo2},
            #{item.betonClientId},
            #{item.projectId},
            #{item.trait},
            #{item.betonClientName},
            #{item.projectName},
            #{item.castType},
            #{item.parts},
            #{item.conStrength},
            #{item.slump},
            #{item.permeate},
            #{item.carNum},
            #{item.grossTon1},
            #{item.tareTon1},
            #{item.realityTon1},
            #{item.cubicNum1},
            #{item.grossTon2},
            #{item.tareTon2},
            #{item.realityTon2},
            #{item.cubicNum2},
            #{item.cubicNum},
            #{item.waybillUrl},
            #{item.source},
            #{item.state},
            #{item.overTime},
            #{item.timeOut},
            #{item.inTime},
            #{item.outTime},
            #{item.financeType},
            #{item.financeId},
            #{item.financeName},
            #{item.financeTime},
            #{item.financeRemark},
            #{item.tallyType},
            #{item.tallyTime},
            #{item.createId},
            #{item.createName},
            #{item.createTime},
            #{item.updateTime}
            )
        </foreach>
    </insert>


    <update id="update">
        UPDATE t_beton_order
        <set>
            <if test="orderNo != null and orderNo != '' ">
                orderNo = #{orderNo},
            </if>
            <if test="clientId != null  ">
                clientId = #{clientId},
            </if>
            <if test="companyName != null and companyName != '' ">
                companyName = #{companyName},
            </if>
            <if test="orderNoERP != null and orderNoERP != '' ">
                orderNoERP = #{orderNoERP},
            </if>
            <if test="manufactureTime != null  ">
                manufactureTime = #{manufactureTime},
            </if>
            <if test="carNo1 != null and carNo1 != '' ">
                carNo1 = #{carNo1},
            </if>
            <if test="carNo2 != null and carNo2 != '' ">
                carNo2 = #{carNo2},
            </if>
            <if test="betonClientId != null  ">
                betonClientId = #{betonClientId},
            </if>
            <if test="projectId != null  ">
                projectId = #{projectId},
            </if>
            <if test="trait != null  ">
                trait = #{trait},
            </if>
            <if test="betonClientName != null and betonClientName != '' ">
                betonClientName = #{betonClientName},
            </if>
            <if test="projectName != null and projectName != '' ">
                projectName = #{projectName},
            </if>
            <if test="castType != null  ">
                castType = #{castType},
            </if>
            <if test="parts != null and parts != '' ">
                parts = #{parts},
            </if>
            <if test="conStrength != null and conStrength != '' ">
                conStrength = #{conStrength},
            </if>
            <if test="slump != null and slump != '' ">
                slump = #{slump},
            </if>
            <if test="permeate != null and permeate != '' ">
                permeate = #{permeate},
            </if>
            <if test="carNum != null  ">
                carNum = #{carNum},
            </if>
            <if test="grossTon1 != null  ">
                grossTon1 = #{grossTon1},
            </if>
            <if test="tareTon1 != null  ">
                tareTon1 = #{tareTon1},
            </if>
            <if test="realityTon1 != null  ">
                realityTon1 = #{realityTon1},
            </if>
            <if test="cubicNum1 != null  ">
                cubicNum1 = #{cubicNum1},
            </if>
            <if test="grossTon2 != null  ">
                grossTon2 = #{grossTon2},
            </if>
            <if test="tareTon2 != null  ">
                tareTon2 = #{tareTon2},
            </if>
            <if test="realityTon2 != null  ">
                realityTon2 = #{realityTon2},
            </if>
            <if test="cubicNum2 != null  ">
                cubicNum2 = #{cubicNum2},
            </if>
            <if test="cubicNum != null  ">
                cubicNum = #{cubicNum},
            </if>
            <if test="waybillUrl != null and waybillUrl != '' ">
                waybillUrl = #{waybillUrl},
            </if>
            <if test="source != null  ">
                source = #{source},
            </if>
            <if test="state != null  ">
                state = #{state},
            </if>
            <if test="overTime != null  ">
                overTime = #{overTime},
            </if>
            <if test="timeOut != null  ">
                timeOut = #{timeOut},
            </if>
            <if test="inTime != null  ">
                inTime = #{inTime},
            </if>
            <if test="outTime != null  ">
                outTime = #{outTime},
            </if>
            <if test="financeType != null  ">
                financeType = #{financeType},
            </if>
            <if test="financeId != null  ">
                financeId = #{financeId},
            </if>
            <if test="financeName != null and financeName != '' ">
                financeName = #{financeName},
            </if>
            <if test="financeTime != null  ">
                financeTime = #{financeTime},
            </if>
            <if test="financeRemark != null and financeRemark != '' ">
                financeRemark = #{financeRemark},
            </if>
            <if test="tallyType != null  ">
                tallyType = #{tallyType},
            </if>
            <if test="tallyTime != null  ">
                tallyTime = #{tallyTime},
            </if>
            <if test="createId != null  ">
                createId = #{createId},
            </if>
            <if test="createName != null and createName != '' ">
                createName = #{createName},
            </if>
            <if test="createTime != null  ">
                createTime = #{createTime},
            </if>
            <if test="updateTime != null  ">
                updateTime = #{updateTime},
            </if>
        </set>
        <where>
            id = #{id}
        </where>
    </update>

    <delete id="delete">
        DELETE FROM t_beton_order
        <where>id = #{id}</where>
    </delete>


    <delete id="batchDelete">
        DELETE FROM t_beton_order
        <where>
            id IN
            <foreach collection="batchIdList" item="id" index="index"
                     open="(" close=")" separator=",">
                #{id}
            </foreach>
        </where>
    </delete>


</mapper>
